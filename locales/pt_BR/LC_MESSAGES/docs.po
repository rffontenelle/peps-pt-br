# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-28 20:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../docs/build.rst:6
msgid "Building PEPs Locally"
msgstr ""

#: ../docs/build.rst:8
msgid ""
"Whilst editing a PEP, it is useful to review the rendered output locally. "
"This can also be used to check that the PEP is valid reStructuredText before "
"submission to the PEP editors."
msgstr ""

#: ../docs/build.rst:12
msgid ""
"The rest of this document assumes you are working from a local clone of the "
"`PEPs repository <https://github.com/python/peps>`__, with **Python 3.9 or "
"later** installed."
msgstr ""

#: ../docs/build.rst:18
msgid "Render PEPs locally"
msgstr ""

#: ../docs/build.rst:20
msgid "Create a virtual environment and install requirements:"
msgstr ""

#: ../docs/build.rst:26 ../docs/build.rst:48
msgid "If you don't have access to ``make``, run:"
msgstr ""

#: ../docs/build.rst:35
msgid ""
"**(Optional)** Delete prior build files. Generally only needed when making "
"changes to the rendering system itself."
msgstr ""

#: ../docs/build.rst:42
msgid "Run the build script:"
msgstr ""

#: ../docs/build.rst:56
msgid ""
"There may be a series of warnings about unreferenced citations or labels. "
"Whilst these are valid warnings, they do not impact the build process."
msgstr ""

#: ../docs/build.rst:59
msgid ""
"Navigate to the ``build`` directory of your PEPs repo to find the HTML "
"pages. PEP 0 provides a formatted index, and may be a useful reference."
msgstr ""

#: ../docs/build.rst:64
msgid "``build.py`` tools"
msgstr ""

#: ../docs/build.rst:66
msgid ""
"Several additional tools can be run through ``build.py``, or the Makefile."
msgstr ""

#: ../docs/build.rst:68
msgid ""
"Note that before using ``build.py`` you must activate the virtual "
"environment created earlier:"
msgstr ""

#: ../docs/build.rst:75
msgid "Or on Windows:"
msgstr ""

#: ../docs/build.rst:83
msgid "Check links"
msgstr ""

#: ../docs/build.rst:85
msgid ""
"Check the validity of links within PEP sources (runs the `Sphinx linkchecker "
"<https://www.sphinx-doc.org/en/master/usage/builders/index.html#sphinx."
"builders.linkcheck.CheckExternalLinksBuilder>`__)."
msgstr ""

#: ../docs/build.rst:95
msgid "Stricter rendering"
msgstr ""

#: ../docs/build.rst:97
msgid ""
"Run in `nit-picky <https://www.sphinx-doc.org/en/master/usage/configuration."
"html#confval-nitpicky>`__ mode. This generates warnings for all missing "
"references."
msgstr ""

#: ../docs/build.rst:105
msgid ""
"Fail the build on any warning. As of January 2022, there are around 250 "
"warnings when building the PEPs."
msgstr ""

#: ../docs/build.rst:115
msgid "``build.py`` usage"
msgstr ""

#: ../docs/build.rst:117
msgid ""
"For details on the command-line options to the ``build.py`` script, run:"
msgstr ""

#: ../docs/rendering_system.rst:9
msgid "An Overview of the PEP Rendering System"
msgstr ""

#: ../docs/rendering_system.rst:11
msgid ""
"This document provides an overview of the PEP rendering system, as a "
"companion to :doc:`PEP 676 <../pep-0676>`."
msgstr ""

#: ../docs/rendering_system.rst:16
msgid "1. Configuration"
msgstr ""

#: ../docs/rendering_system.rst:18
msgid "Configuration is stored in three files:"
msgstr ""

#: ../docs/rendering_system.rst:20
msgid "``conf.py`` contains the majority of the Sphinx configuration"
msgstr ""

#: ../docs/rendering_system.rst:21
msgid ""
"``contents.rst`` creates the Sphinx-mandated table of contents directive"
msgstr ""

#: ../docs/rendering_system.rst:22
msgid "``pep_sphinx_extensions/pep_theme/theme.conf`` sets the Pygments themes"
msgstr ""

#: ../docs/rendering_system.rst:24
msgid "The configuration:"
msgstr ""

#: ../docs/rendering_system.rst:26
msgid "registers the custom Sphinx extension"
msgstr ""

#: ../docs/rendering_system.rst:27
msgid "sets both ``.txt`` and ``.rst`` suffixes to be parsed as PEPs"
msgstr ""

#: ../docs/rendering_system.rst:28
msgid "tells Sphinx which source files to use"
msgstr ""

#: ../docs/rendering_system.rst:29
msgid "registers the PEP theme, maths renderer, and template"
msgstr ""

#: ../docs/rendering_system.rst:30
msgid "disables some default settings that are covered in the extension"
msgstr ""

#: ../docs/rendering_system.rst:31
msgid "sets the default and \"dark mode\" code formatter styles"
msgstr ""

#: ../docs/rendering_system.rst:35
msgid "2. Orchestration"
msgstr ""

#: ../docs/rendering_system.rst:37
msgid ""
"``build.py`` manages the rendering process. Usage is covered in :doc:`build`."
msgstr ""

#: ../docs/rendering_system.rst:42
msgid "3. Extension"
msgstr ""

#: ../docs/rendering_system.rst:44
msgid ""
"The Sphinx extension and theme are contained in the "
"``pep_sphinx_extensions`` directory. The following is a brief overview of "
"the stages of the PEP rendering process, and how the extension functions at "
"each point."
msgstr ""

#: ../docs/rendering_system.rst:51
msgid "3.1 Extension setup"
msgstr ""

#: ../docs/rendering_system.rst:53
msgid "The extension registers several objects:"
msgstr ""

#: ../docs/rendering_system.rst:55
msgid ""
"``FileBuilder`` and ``DirectoryBuilder`` run the build process for file- and "
"directory-based building, respectively."
msgstr ""

#: ../docs/rendering_system.rst:57
msgid ""
"``PEPParser`` registers the custom document transforms and parses PEPs to a "
"Docutils document."
msgstr ""

#: ../docs/rendering_system.rst:59
msgid "``PEPTranslator`` converts a Docutils document into HTML."
msgstr ""

#: ../docs/rendering_system.rst:60
msgid "``PEPRole`` handles ``:pep:`` roles in the reStructuredText source."
msgstr ""

#: ../docs/rendering_system.rst:62
msgid "The extension also patches default behaviour:"
msgstr ""

#: ../docs/rendering_system.rst:64
msgid "updating the default settings"
msgstr ""

#: ../docs/rendering_system.rst:65
msgid "updating the Docutils inliner"
msgstr ""

#: ../docs/rendering_system.rst:66
msgid "using HTML maths display over MathJax"
msgstr ""

#: ../docs/rendering_system.rst:70
msgid "3.2 Builder initialised"
msgstr ""

#: ../docs/rendering_system.rst:72
msgid ""
"After the Sphinx builder object is created and initialised, we ensure the "
"configuration is correct for the builder chosen."
msgstr ""

#: ../docs/rendering_system.rst:75
msgid ""
"Currently this involves updating the relative link template. See "
"``_update_config_for_builder`` in ``pep_sphinx_extensions/__init__.py``."
msgstr ""

#: ../docs/rendering_system.rst:80
msgid "3.3 Before documents are read"
msgstr ""

#: ../docs/rendering_system.rst:82
msgid "The ``create_pep_zero`` hook is called. See `5. PEP 0`_."
msgstr ""

#: ../docs/rendering_system.rst:86
msgid "3.4 Read document"
msgstr ""

#: ../docs/rendering_system.rst:88
msgid ""
"Parsing the document is handled by ``PEPParser`` (``pep_sphinx_extensions."
"pep_processor.parsing.pep_parser.PEPParser``), a lightweight wrapper over "
"``sphinx.parsers.RSTParser``."
msgstr ""

#: ../docs/rendering_system.rst:92
msgid ""
"``PEPParser`` reads the document with leading :rfc:`2822` headers and "
"registers the transforms we want to apply. These are:"
msgstr ""

#: ../docs/rendering_system.rst:96
msgid "``PEPHeaders``"
msgstr ""

#: ../docs/rendering_system.rst:97
msgid "``PEPTitle``"
msgstr ""

#: ../docs/rendering_system.rst:98
msgid "``PEPContents``"
msgstr ""

#: ../docs/rendering_system.rst:99
msgid "``PEPFooter``"
msgstr ""

#: ../docs/rendering_system.rst:101
msgid "Transforms are then applied in priority order."
msgstr ""

#: ../docs/rendering_system.rst:105
msgid "3.4.1 ``PEPRole`` role"
msgstr ""

#: ../docs/rendering_system.rst:107
msgid "This overrides the built-in ``:pep:`` role to return the correct URL."
msgstr ""

#: ../docs/rendering_system.rst:111
msgid "3.4.2 ``PEPHeaders`` transform"
msgstr ""

#: ../docs/rendering_system.rst:113
msgid ""
"PEPs start with a set of :rfc:`2822` headers, per :doc:`PEP 1 <../"
"pep-0001>`. This transform validates that the required headers are present "
"and of the correct data type, and removes headers not for display. It must "
"run before the ``PEPTitle`` transform."
msgstr ""

#: ../docs/rendering_system.rst:120
msgid "3.4.3 ``PEPTitle`` transform"
msgstr ""

#: ../docs/rendering_system.rst:122
msgid ""
"We generate the title node from the parsed title in the PEP headers, and "
"make all nodes in the document children of the new title node. This "
"transform must also handle parsing reStructuredText markup within PEP "
"titles, such as :doc:`PEP 604 <../pep-0604>`."
msgstr ""

#: ../docs/rendering_system.rst:129
msgid "3.4.4 ``PEPContents`` transform"
msgstr ""

#: ../docs/rendering_system.rst:131
msgid ""
"The automatic table of contents (TOC) is inserted in this transform in a two-"
"part process."
msgstr ""

#: ../docs/rendering_system.rst:134
msgid ""
"First, the transform inserts a placeholder for the TOC and a horizontal rule "
"after the document title and PEP headers. A callback transform then "
"recursively walks the document to create the TOC, starting from after the "
"placeholder node. Whilst walking the document, all reference nodes in the "
"titles are removed, and titles are given a self-link."
msgstr ""

#: ../docs/rendering_system.rst:143
msgid "3.4.5 ``PEPFooter`` transform"
msgstr ""

#: ../docs/rendering_system.rst:145
msgid ""
"This first builds a map of file modification times from a single git call, "
"as a speed-up. This will return incorrect results on a shallow checkout of "
"the repository, as is the default on continuous integration systems."
msgstr ""

#: ../docs/rendering_system.rst:149
msgid ""
"We then attempt to remove any empty references sections, and append metadata "
"in the footer (source link and last modified timestamp)."
msgstr ""

#: ../docs/rendering_system.rst:154
msgid "3.5 Prepare for writing"
msgstr ""

#: ../docs/rendering_system.rst:156
msgid ""
"``pep_html_builder.FileBuilder.prepare_writing`` initialises the bare "
"miniumum of the Docutils writer and the settings for writing documents. This "
"provides a significant speed-up over the base Sphinx implementation, as most "
"of the data automatically initialised was unused."
msgstr ""

#: ../docs/rendering_system.rst:163
msgid "3.6 Translate Docutils to HTML"
msgstr ""

#: ../docs/rendering_system.rst:165
msgid ""
"``PEPTranslator`` overrides paragraph and reference logic to replicate "
"processing from the previous ``docutils.writers.pep``-based system. "
"Paragraphs are made compact where possible by omitting ``<p>`` tags, and "
"footnote references are be enclosed in square brackets."
msgstr ""

#: ../docs/rendering_system.rst:172
msgid "3.7 Prepare for export to Jinja"
msgstr ""

#: ../docs/rendering_system.rst:174
msgid ""
"Finally in ``pep_html_builder``, we gather all the parts to be passed to the "
"Jinja template. This is also where we create the sidebar table of contents."
msgstr ""

#: ../docs/rendering_system.rst:178
msgid "The HTML files are then written out to the build directory."
msgstr ""

#: ../docs/rendering_system.rst:182
msgid "4. Theme"
msgstr ""

#: ../docs/rendering_system.rst:184
msgid ""
"The theme is comprised of the HTML template in ``pep_sphinx_extensions/"
"pep_theme/templates/page.html`` and the stylesheets in "
"``pep_sphinx_extensions/pep_theme/static``."
msgstr ""

#: ../docs/rendering_system.rst:188
msgid ""
"The template is entirely self-contained, not relying on any default "
"behaviour from Sphinx. It specifies the CSS files to include, the favicon, "
"and basic semantic information for the document structure."
msgstr ""

#: ../docs/rendering_system.rst:193
msgid "The styles are defined in two parts:"
msgstr ""

#: ../docs/rendering_system.rst:195
msgid "``style.css`` handles the meat of the layout"
msgstr ""

#: ../docs/rendering_system.rst:196
msgid "``mq.css`` adds media queries for a responsive design"
msgstr ""

#: ../docs/rendering_system.rst:200
msgid "5. \\PEP 0"
msgstr ""

#: ../docs/rendering_system.rst:202
msgid ""
"The generation of the index, PEP 0, happens in three phases. The "
"reStructuredText source file is generated, it is then added to Sphinx, and "
"finally the data is post processed."
msgstr ""

#: ../docs/rendering_system.rst:208
msgid "5.1 File creation"
msgstr ""

#: ../docs/rendering_system.rst:210
msgid ""
"``pep-0000.rst`` is created during a callback, before documents are loaded "
"by Sphinx."
msgstr ""

#: ../docs/rendering_system.rst:213
msgid ""
"We first parse the individual PEP files to get the :rfc:`2822` header, and "
"then parse and validate that metadata."
msgstr ""

#: ../docs/rendering_system.rst:216
msgid ""
"After collecting and validating all the PEP data, the index itself is "
"created in three steps:"
msgstr ""

#: ../docs/rendering_system.rst:219
msgid "Output the header text"
msgstr ""

#: ../docs/rendering_system.rst:220
msgid "Output the category and numerical indices"
msgstr ""

#: ../docs/rendering_system.rst:221
msgid "Output the author index"
msgstr ""

#: ../docs/rendering_system.rst:223
msgid ""
"The ``AUTHOR_OVERRIDES.csv`` file can be used to override an author's name "
"in the PEP 0 output."
msgstr ""

#: ../docs/rendering_system.rst:226
msgid ""
"We then add the newly created PEP 0 file to two Sphinx variables so that it "
"will be processed as a normal source document."
msgstr ""

#: ../docs/rendering_system.rst:231
msgid "5.2 Post processing"
msgstr ""

#: ../docs/rendering_system.rst:233
msgid ""
"The ``PEPHeaders`` transform schedules the \\PEP 0 post-processing code. "
"This serves two functions: masking email addresses and linking numeric PEP "
"references to the actual documents."
msgstr ""

#: ../docs/rendering_system.rst:239
msgid "6. RSS Feed"
msgstr ""

#: ../docs/rendering_system.rst:241
msgid ""
"The RSS feed is created by extracting the header metadata and abstract from "
"the ten most recent PEPs."
msgstr ""
