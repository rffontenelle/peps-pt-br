# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-28 20:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../pep-0301.txt
msgid "Author"
msgstr ""

#: ../pep-0301.txt:5
msgid "Richard Jones <richard@python.org>"
msgstr ""

#: ../pep-0301.txt
msgid "Status"
msgstr ""

#: ../pep-0301.txt:6
msgid "Final"
msgstr ""

#: ../pep-0301.txt
msgid "Type"
msgstr ""

#: ../pep-0301.txt:7
msgid "Standards Track"
msgstr ""

#: ../pep-0301.txt
msgid "Topic"
msgstr ""

#: ../pep-0301.txt:8
msgid "Packaging"
msgstr ""

#: ../pep-0301.txt
msgid "Created"
msgstr ""

#: ../pep-0301.txt:10
msgid "24-Oct-2002"
msgstr ""

#: ../pep-0301.txt
msgid "Python-Version"
msgstr ""

#: ../pep-0301.txt:11
msgid "2.3"
msgstr ""

#: ../pep-0301.txt
msgid "Post-History"
msgstr ""

#: ../pep-0301.txt:12
msgid "08-Nov-2002"
msgstr ""

#: ../pep-0301.txt:16
msgid "Abstract"
msgstr ""

#: ../pep-0301.txt:18
msgid ""
"This PEP proposes several extensions to the Distutils packaging system "
"[1]_.  These enhancements include a central package index server, tools for "
"submitting package information to the index and extensions to the package "
"metadata to include Trove [2]_ information."
msgstr ""

#: ../pep-0301.txt:23
msgid ""
"This PEP does not address issues of package dependency.  It also does not "
"address storage and download of packages as described in :pep:`243`. Nor is "
"it proposing a local database of packages as described in :pep:`262`."
msgstr ""

#: ../pep-0301.txt:28
msgid ""
"Existing package repositories such as the Vaults of Parnassus [3]_, CPAN "
"[4]_ and PAUSE [5]_ will be investigated as prior art in this field."
msgstr ""

#: ../pep-0301.txt:34
msgid "Rationale"
msgstr ""

#: ../pep-0301.txt:36
msgid ""
"Python programmers have long needed a simple method of discovering existing "
"modules and systems available for their use.  It is arguable that the "
"existence of these systems for other languages have been a significant "
"contribution to their popularity.  The existence of the Catalog-SIG, and the "
"many discussions there indicate that there is a large population of users "
"who recognise this need."
msgstr ""

#: ../pep-0301.txt:43
msgid ""
"The introduction of the Distutils packaging system to Python simplified the "
"process of distributing shareable code, and included mechanisms for the "
"capture of package metadata, but did little with the metadata save ship it "
"with the package."
msgstr ""

#: ../pep-0301.txt:48
msgid ""
"An interface to the index should be hosted in the python.org domain, giving "
"it an air of legitimacy that existing catalog efforts do not have."
msgstr ""

#: ../pep-0301.txt:52
msgid ""
"The interface for submitting information to the catalog should be as simple "
"as possible - hopefully just a one-line command for most users."
msgstr ""

#: ../pep-0301.txt:55
msgid ""
"Issues of package dependency are not addressed due to the complexity of such "
"a system.  :pep:`262` proposes such a system, but as of this writing the PEP "
"is still unfinished."
msgstr ""

#: ../pep-0301.txt:59
msgid ""
"Issues of package dissemination (storage on a central server) are not "
"addressed because they require assumptions about availability of storage and "
"bandwidth that I am not in a position to make.  :pep:`243`, which is still "
"being developed, is tackling these issues and many more.  This proposal is "
"considered compatible with, and adjunct to the proposal in :pep:`243`."
msgstr ""

#: ../pep-0301.txt:68
msgid "Specification"
msgstr ""

#: ../pep-0301.txt:70
msgid ""
"The specification takes three parts, the `web interface`_,  the `Distutils "
"register command`_ and the `Distutils Trove classification`_."
msgstr ""

#: ../pep-0301.txt:76
msgid "Web Interface"
msgstr ""

#: ../pep-0301.txt:78
msgid ""
"A web interface is implemented over a simple store.  The interface is "
"available through the python.org domain, either directly or as packages."
"python.org."
msgstr ""

#: ../pep-0301.txt:82
msgid ""
"The store has columns for all metadata fields.  The (name, version) double "
"is used as a uniqueness key.  Additional submissions for an existing (name, "
"version) will result in an *update* operation."
msgstr ""

#: ../pep-0301.txt:86
msgid "The web interface implements the following commands/interfaces:"
msgstr ""

#: ../pep-0301.txt:95
msgid "**index**"
msgstr ""

#: ../pep-0301.txt:89
msgid ""
"Lists known packages, optionally filtered.  An additional HTML page, "
"**search**, presents a form to the user which is used to customise the index "
"view.  The index will include a browsing interface like that presented in "
"the Trove interface design section 4.3.  The results will be paginated, "
"sorted alphabetically and only showing the most recent version.  The most "
"recent version information will be determined using the Distutils "
"LooseVersion class."
msgstr ""

#: ../pep-0301.txt:99
msgid "**display**"
msgstr ""

#: ../pep-0301.txt:98
msgid ""
"Displays information about the package.  All fields are displayed as plain "
"text.  The \"url\" (or \"home_page\") field is hyperlinked."
msgstr ""

#: ../pep-0301.txt:112
msgid "**submit**"
msgstr ""

#: ../pep-0301.txt:102
msgid ""
"Accepts a POST submission of metadata about a package.  The \"name\" and "
"\"version\" fields are mandatory, as they uniquely identify an entry in the "
"index.  **Submit** will automatically determine whether to create a new "
"entry or update an existing entry.  The metadata is checked for correctness "
"where appropriate - specifically the Trove discriminators are compared with "
"the allowed set.  An update will update all information about the package "
"based on the new submitted information."
msgstr ""

#: ../pep-0301.txt:111
msgid ""
"There will also be a submit/edit form that will allow manual submission and "
"updating for those who do not use Distutils."
msgstr ""

#: ../pep-0301.txt:116
msgid "**submit_pkg_info**"
msgstr ""

#: ../pep-0301.txt:115
msgid ""
"Accepts a POST submission of a PKG-INFO file and performs the same function "
"as the **submit** interface."
msgstr ""

#: ../pep-0301.txt:134
msgid "**user**"
msgstr ""

#: ../pep-0301.txt:119
msgid ""
"Registers a new user with the index.  Requires username, password and email "
"address.  Passwords will be stored in the index database as SHA hashes.  If "
"the username already exists in the database:"
msgstr ""

#: ../pep-0301.txt:123
msgid ""
"If valid HTTP Basic authentication is provided, the password and email "
"address are updated with the submission information, or"
msgstr ""

#: ../pep-0301.txt:125
msgid ""
"If no valid authentication is provided, the user is informed that the login "
"is already taken."
msgstr ""

#: ../pep-0301.txt:128
msgid "Registration will be a three-step process, involving:"
msgstr ""

#: ../pep-0301.txt:130
msgid ""
"User submission of details via the Distutils *register* command or through "
"the web,"
msgstr ""

#: ../pep-0301.txt:132
msgid ""
"Index server sending email to the user's email address with a URL to visit "
"to confirm registration with a random one-time key, and"
msgstr ""

#: ../pep-0301.txt:134
msgid "User visits URL with the key and confirms registration."
msgstr ""

#: ../pep-0301.txt:137 ../pep-0301.txt:212
msgid "**roles**"
msgstr ""

#: ../pep-0301.txt:137
msgid "An interface for changing user Role assignments."
msgstr ""

#: ../pep-0301.txt:141
msgid "**password_reset**"
msgstr ""

#: ../pep-0301.txt:140
msgid ""
"Using a supplied email address as the key, this resets a user's password and "
"sends an email with the new password to the user."
msgstr ""

#: ../pep-0301.txt:143
msgid ""
"The **submit** command will require HTTP Basic authentication, preferably "
"over an HTTPS connection."
msgstr ""

#: ../pep-0301.txt:146
msgid ""
"The server interface will indicate success or failure of the commands "
"through a subset of the standard HTTP response codes:"
msgstr ""

#: ../pep-0301.txt:150
msgid "Code"
msgstr ""

#: ../pep-0301.txt:150
msgid "Meaning"
msgstr ""

#: ../pep-0301.txt:150
msgid "Register command implications"
msgstr ""

#: ../pep-0301.txt:152
msgid "200"
msgstr ""

#: ../pep-0301.txt:152
msgid "OK"
msgstr ""

#: ../pep-0301.txt:152
msgid "Everything worked just fine"
msgstr ""

#: ../pep-0301.txt:153
msgid "400"
msgstr ""

#: ../pep-0301.txt:153
msgid "Bad request"
msgstr ""

#: ../pep-0301.txt:153
msgid "Data provided for submission was malformed"
msgstr ""

#: ../pep-0301.txt:154
msgid "401"
msgstr ""

#: ../pep-0301.txt:154
msgid "Unauthorised"
msgstr ""

#: ../pep-0301.txt:154
msgid "The username or password supplied were incorrect"
msgstr ""

#: ../pep-0301.txt:155
msgid "403"
msgstr ""

#: ../pep-0301.txt:155
msgid "Forbidden"
msgstr ""

#: ../pep-0301.txt:155
msgid ""
"User does not have permission to update the package information (not Owner "
"or Maintainer)"
msgstr ""

#: ../pep-0301.txt:160
msgid "User Roles"
msgstr ""

#: ../pep-0301.txt:162
msgid "Three user Roles will be assignable to users:"
msgstr ""

#: ../pep-0301.txt:168
msgid "Owner"
msgstr ""

#: ../pep-0301.txt:165
msgid ""
"Owns a package name, may assign Maintainer Role for that name.  The first "
"user to register information about a package is deemed Owner of the package "
"name.  The Admin user may change this if necessary. May submit updates for "
"the package name."
msgstr ""

#: ../pep-0301.txt:171
msgid "Maintainer"
msgstr ""

#: ../pep-0301.txt:171
msgid "Can submit and update info for a particular package name."
msgstr ""

#: ../pep-0301.txt:176
msgid "Admin"
msgstr ""

#: ../pep-0301.txt:174
msgid ""
"Can assign Owner Role and edit user details. Not specific to a package name."
msgstr ""

#: ../pep-0301.txt:179
msgid "Index Storage (Schema)"
msgstr ""

#: ../pep-0301.txt:181
msgid "The index is stored in a set of relational database tables:"
msgstr ""

#: ../pep-0301.txt:185
msgid "**packages**"
msgstr ""

#: ../pep-0301.txt:184
msgid ""
"Lists package names and holds package-level metadata (currently just the "
"stable release version)"
msgstr ""

#: ../pep-0301.txt:191
msgid "**releases**"
msgstr ""

#: ../pep-0301.txt:188
msgid ""
"Each package has an entry in **releases** for each version of the package "
"that is released. A row holds the bulk of the information given in the "
"package's PKG-INFO file. There is one row for each package (*name*, "
"*version*)."
msgstr ""

#: ../pep-0301.txt:195
msgid "**trove_discriminators**"
msgstr ""

#: ../pep-0301.txt:194
msgid "Lists the Trove discriminator text and assigns each one a unique ID."
msgstr ""

#: ../pep-0301.txt:200
msgid "**release_discriminators**"
msgstr ""

#: ../pep-0301.txt:198
msgid ""
"Each entry maps a package (*name*, *version*) to a *discriminator_id*.  We "
"map to releases instead of packages because the set of discriminators may "
"change between releases."
msgstr ""

#: ../pep-0301.txt:206
msgid "**journals**"
msgstr ""

#: ../pep-0301.txt:203
msgid ""
"Holds information about changes to package information in the index. Changes "
"to the **packages**, **releases**, **roles**, and **release_discriminators** "
"tables are listed here by package *name* and *version* if the change is "
"release-specific."
msgstr ""

#: ../pep-0301.txt:209
msgid "**users**"
msgstr ""

#: ../pep-0301.txt:209
msgid "Holds our user database - user name, email address and password."
msgstr ""

#: ../pep-0301.txt:212
msgid "Maps *user_name* and *role_name* to a *package_name*."
msgstr ""

#: ../pep-0301.txt:214
msgid ""
"An additional table, **rego_otk** holds the One Time Keys generated during "
"registration and is not interesting in the scope of the index itself."
msgstr ""

#: ../pep-0301.txt:220
msgid "Distutils *register* Command"
msgstr ""

#: ../pep-0301.txt:222
msgid ""
"An additional Distutils command, ``register``, is implemented which posts "
"the package metadata to the central index.  The *register* command "
"automatically handles user registration; the user is presented with three "
"options:"
msgstr ""

#: ../pep-0301.txt:227
msgid "login and submit package information"
msgstr ""

#: ../pep-0301.txt:228
msgid "register as a new packager"
msgstr ""

#: ../pep-0301.txt:229
msgid "send password reminder email"
msgstr ""

#: ../pep-0301.txt:231
msgid ""
"On systems where the ``$HOME`` environment variable is set, the user will be "
"prompted at exit to save their username/password to a file in their "
"``$HOME`` directory in the file ``.pypirc``."
msgstr ""

#: ../pep-0301.txt:235
msgid ""
"Notification of changes to a package entry will be sent to all users who "
"have submitted information about the package.  That is, the original "
"submitter and any subsequent updaters."
msgstr ""

#: ../pep-0301.txt:239
msgid ""
"The *register* command will include a ``--verify`` option which performs a "
"test submission to the index without actually committing the data.  The "
"index will perform its submission verification checks as usual and report "
"any errors it would have reported during a normal submission.  This is "
"useful for verifying correctness of Trove discriminators."
msgstr ""

#: ../pep-0301.txt:248
msgid "Distutils Trove Classification"
msgstr ""

#: ../pep-0301.txt:250
msgid ""
"The Trove concept of *discrimination* will be added to the metadata set "
"available to package authors through the new attribute \"classifiers\".  The "
"list of classifiers will be available through the web, and added to the "
"package like so::"
msgstr ""

#: ../pep-0301.txt:278
msgid ""
"It was decided that strings would be used for the classification entries due "
"to the deep nesting that would be involved in a more formal Python structure."
msgstr ""

#: ../pep-0301.txt:282
msgid ""
"The original Trove specification that classification namespaces be separated "
"by slashes (\"/\") unfortunately collides with many of the names having "
"slashes in them (e.g. \"OS/2\").  The double-colon solution (\" :: \") "
"implemented by SourceForge and FreshMeat gets around this limitation."
msgstr ""

#: ../pep-0301.txt:288
msgid ""
"The list of classification values on the module index has been merged from "
"FreshMeat and SourceForge (with their permission).  This list will be made "
"available both through the web interface and through the *register* "
"command's ``--list-classifiers`` option as a text list which may then be "
"copied to the ``setup.py`` file.  The *register* command's ``--verify`` "
"option will check classifiers values against the server's list."
msgstr ""

#: ../pep-0301.txt:296
msgid ""
"Unfortunately, the addition of the \"classifiers\" property is not backwards-"
"compatible.  A setup.py file using it will not work under Python 2.1.3.  It "
"is hoped that a bug-fix release of Python 2.2 (most likely 2.2.3) will relax "
"the argument checking of the setup() command to allow new keywords, even if "
"they're not actually used.  It is preferable that a warning be produced, "
"rather than a show-stopping error. The use of the new keyword should be "
"discouraged in situations where the package is advertised as being "
"compatible with python versions earlier than 2.2.3 or 2.3."
msgstr ""

#: ../pep-0301.txt:306
msgid ""
"In the PKG-INFO, the classifiers list items will appear as individual "
"``Classifier:`` entries::"
msgstr ""

#: ../pep-0301.txt:320
msgid "Implementation"
msgstr ""

#: ../pep-0301.txt:322
msgid "The server is available at:"
msgstr ""

#: ../pep-0301.txt:324
msgid "http://www.python.org/pypi"
msgstr ""

#: ../pep-0301.txt:326
msgid "The code is available from the SourceForge project:"
msgstr ""

#: ../pep-0301.txt:328
msgid "http://sourceforge.net/projects/pypi/"
msgstr ""

#: ../pep-0301.txt:330
msgid "The *register* command has been integrated into Python 2.3."
msgstr ""

#: ../pep-0301.txt:334
msgid "Rejected Proposals"
msgstr ""

#: ../pep-0301.txt:336
msgid ""
"Originally, the index server was to return custom headers (inspired by :pep:"
"`243`):"
msgstr ""

#: ../pep-0301.txt:340
msgid "**X-Pypi-Status**"
msgstr ""

#: ../pep-0301.txt:340
msgid "Either \"success\" or \"fail\"."
msgstr ""

#: ../pep-0301.txt:344
msgid "**X-Pypi-Reason**"
msgstr ""

#: ../pep-0301.txt:343
msgid ""
"A description of the reason for failure, or additional information in the "
"case of a success."
msgstr ""

#: ../pep-0301.txt:346
msgid "However, it has been pointed out [6]_ that this is a bad scheme to use."
msgstr ""

#: ../pep-0301.txt:351
msgid "References"
msgstr ""

#: ../pep-0301.txt:353
msgid ""
"Distutils packaging system (http://docs.python.org/library/distutils.html)"
msgstr ""

#: ../pep-0301.txt:356
msgid "Trove (http://www.catb.org/~esr/trove/)"
msgstr ""

#: ../pep-0301.txt:359
msgid "Vaults of Parnassus (http://www.vex.net/parnassus/)"
msgstr ""

#: ../pep-0301.txt:362
msgid "CPAN (http://www.cpan.org/)"
msgstr ""

#: ../pep-0301.txt:365
msgid "PAUSE (http://pause.cpan.org/)"
msgstr ""

#: ../pep-0301.txt:368
msgid ""
"[PEP243] upload status is bogus (https://mail.python.org/pipermail/distutils-"
"sig/2001-March/002262.html)"
msgstr ""

#: ../pep-0301.txt:373
msgid "Copyright"
msgstr ""

#: ../pep-0301.txt:375
msgid "This document has been placed in the public domain."
msgstr ""

#: ../pep-0301.txt:379
msgid "Acknowledgements"
msgstr ""

#: ../pep-0301.txt:381
msgid ""
"Anthony Baxter, Martin v. Loewis and David Goodger for encouragement and "
"feedback during initial drafting."
msgstr ""

#: ../pep-0301.txt:384
msgid "A.M. Kuchling for support including hosting the second prototype."
msgstr ""

#: ../pep-0301.txt:386
msgid ""
"Greg Stein for recommending that the register command interpret the HTTP "
"response codes rather than custom X-PyPI-* headers."
msgstr ""

#: ../pep-0301.txt:389
msgid ""
"The many participants of the Distutils and Catalog SIGs for their ideas over "
"the years."
msgstr ""
