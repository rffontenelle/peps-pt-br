# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-28 20:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../pep-0217.txt
msgid "Author"
msgstr ""

#: ../pep-0217.txt:3
msgid "Moshe Zadka <moshez@zadka.site.co.il>"
msgstr ""

#: ../pep-0217.txt
msgid "Status"
msgstr ""

#: ../pep-0217.txt:4
msgid "Final"
msgstr ""

#: ../pep-0217.txt
msgid "Type"
msgstr ""

#: ../pep-0217.txt:5
msgid "Standards Track"
msgstr ""

#: ../pep-0217.txt
msgid "Created"
msgstr ""

#: ../pep-0217.txt:7
msgid "31-Jul-2000"
msgstr ""

#: ../pep-0217.txt
msgid "Python-Version"
msgstr ""

#: ../pep-0217.txt:8
msgid "2.1"
msgstr ""

#: ../pep-0217.txt
msgid "Post-History"
msgstr ""

#: ../pep-0217.txt:13
msgid "Abstract"
msgstr ""

#: ../pep-0217.txt:15
msgid ""
"Python's interactive mode is one of the implementation's great strengths -- "
"being able to write expressions on the command line and get back a "
"meaningful output.  However, the output function cannot be all things to all "
"people, and the current output function too often falls short of this goal.  "
"This PEP describes a way to provides alternatives to the built-in display "
"function in Python, so users will have control over the output from the "
"interactive interpreter."
msgstr ""

#: ../pep-0217.txt:26
msgid "Interface"
msgstr ""

#: ../pep-0217.txt:28
msgid ""
"The current Python solution has worked for many users, and this should not "
"break it. Therefore, in the default configuration, nothing will change in "
"the REPL loop. To change the way the interpreter prints interactively "
"entered expressions, users will have to rebind ``sys.displayhook`` to a "
"callable object. The result of calling this object with the result of the "
"interactively entered expression should be print-able, and this is what will "
"be printed on ``sys.stdout``."
msgstr ""

#: ../pep-0217.txt:39
msgid "Solution"
msgstr ""

#: ../pep-0217.txt:41
msgid ""
"The bytecode ``PRINT_EXPR`` will call ``sys.displayhook(POP())``. A "
"``displayhook()`` will be added to the sys builtin module, which is "
"equivalent to::"
msgstr ""

#: ../pep-0217.txt:55
msgid "Jython Issues"
msgstr ""

#: ../pep-0217.txt:57
msgid "The method ``Py.printResult`` will be similarly changed."
msgstr ""
