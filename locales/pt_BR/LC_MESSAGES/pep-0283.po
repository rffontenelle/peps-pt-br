# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-28 20:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../pep-0283.txt
msgid "Author"
msgstr ""

#: ../pep-0283.txt:5
msgid "Guido van Rossum"
msgstr ""

#: ../pep-0283.txt
msgid "Status"
msgstr ""

#: ../pep-0283.txt:6
msgid "Final"
msgstr ""

#: ../pep-0283.txt
msgid "Type"
msgstr ""

#: ../pep-0283.txt:7
msgid "Informational"
msgstr ""

#: ../pep-0283.txt
msgid "Topic"
msgstr ""

#: ../pep-0283.txt:8
msgid "Release"
msgstr ""

#: ../pep-0283.txt
msgid "Created"
msgstr ""

#: ../pep-0283.txt:10 ../pep-0283.txt:12
msgid "27-Feb-2002"
msgstr ""

#: ../pep-0283.txt
msgid "Python-Version"
msgstr ""

#: ../pep-0283.txt:11
msgid "2.3"
msgstr ""

#: ../pep-0283.txt
msgid "Post-History"
msgstr ""

#: ../pep-0283.txt:16
msgid "Abstract"
msgstr ""

#: ../pep-0283.txt:18
msgid ""
"This document describes the development and release schedule for Python "
"2.3.  The schedule primarily concerns itself with PEP-sized items.  Small"
" features may be added up to and including the first beta release.  Bugs "
"may be fixed until the final release."
msgstr ""

#: ../pep-0283.txt:23
msgid ""
"There will be at least two alpha releases, two beta releases, and one "
"release candidate.  Alpha and beta releases will be spaced at least 4 "
"weeks apart (except if an emergency release must be made to correct a "
"blunder in the previous release; then the blunder release does not "
"count).  Release candidates will be spaced at least one week apart "
"(excepting again blunder corrections)."
msgstr ""

#: ../pep-0283.txt:31
msgid "alpha 1"
msgstr ""

#: ../pep-0283.txt:31
msgid "31 Dec 2002"
msgstr ""

#: ../pep-0283.txt:32
msgid "alpha 2"
msgstr ""

#: ../pep-0283.txt:32
msgid "19 Feb 2003"
msgstr ""

#: ../pep-0283.txt:33
msgid "beta 1"
msgstr ""

#: ../pep-0283.txt:33
msgid "25 Apr 2003"
msgstr ""

#: ../pep-0283.txt:34
msgid "beta 2"
msgstr ""

#: ../pep-0283.txt:34
msgid "29 Jun 2003"
msgstr ""

#: ../pep-0283.txt:35
msgid "candidate 1"
msgstr ""

#: ../pep-0283.txt:35
msgid "18 Jul 2003"
msgstr ""

#: ../pep-0283.txt:36
msgid "candidate 2"
msgstr ""

#: ../pep-0283.txt:36
msgid "24 Jul 2003"
msgstr ""

#: ../pep-0283.txt:37
msgid "final"
msgstr ""

#: ../pep-0283.txt:37
msgid "29 Jul 2003"
msgstr ""

#: ../pep-0283.txt:41
msgid "Release Manager"
msgstr ""

#: ../pep-0283.txt:43
msgid "Barry Warsaw, Jeremy Hylton, Tim Peters"
msgstr ""

#: ../pep-0283.txt:47
msgid "Completed features for 2.3"
msgstr ""

#: ../pep-0283.txt:49
msgid ""
"This list is not complete.  See ``Doc/whatsnew/whatsnew23.tex`` in CVS "
"for more, and of course ``Misc/NEWS`` for the full list."
msgstr ""

#: ../pep-0283.txt:52
msgid "Tk 8.4 update."
msgstr ""

#: ../pep-0283.txt:54
msgid "The ``bool`` type and its constants, ``True`` and ``False`` (:pep:`285`)."
msgstr ""

#: ../pep-0283.txt:56
msgid "``PyMalloc`` was greatly enhanced and is enabled by default."
msgstr ""

#: ../pep-0283.txt:58
msgid "Universal newline support (:pep:`278`)."
msgstr ""

#: ../pep-0283.txt:60
msgid ":pep:`263` Defining Python Source Code Encodings, Lemburg"
msgstr ""

#: ../pep-0283.txt:62
msgid "Implemented (at least phase 1, which is all that's planned for 2.3)."
msgstr ""

#: ../pep-0283.txt:65
msgid ""
"Extended slice notation for all built-in sequences.  The patch by Michael"
" Hudson is now all checked in."
msgstr ""

#: ../pep-0283.txt:68
msgid ""
"Speed up list iterations by filling ``tp_iter`` and other tweaks. See "
"https://bugs.python.org/issue560736; also done for ``xrange`` and tuples."
msgstr ""

#: ../pep-0283.txt:72
msgid "Timeout sockets.  https://bugs.python.org/issue555085"
msgstr ""

#: ../pep-0283.txt:74
msgid ""
"Stage B0 of the ``int``/``long`` integration (:pep:`237`).  This means "
"issuing a ``FutureWarning`` about situations where ``hex`` or ``oct`` "
"conversions or left shifts returns a different value for an ``int`` than "
"for a ``long`` with the same value.  The semantics do *not* change in "
"Python 2.3; that will happen in Python 2.4."
msgstr ""

#: ../pep-0283.txt:80
msgid ""
"Nuke ``SET_LINENO`` from all code objects (providing a different way to "
"set debugger breakpoints).  This can boost ``pystone`` by >5%. "
"https://bugs.python.org/issue587993, now checked in.  (Unfortunately the "
"``pystone`` boost didn't happen.  What happened?)"
msgstr ""

#: ../pep-0283.txt:85
msgid ""
"Write a ``pymemcompat.h`` that people can bundle with their extensions "
"and then use the 2.3 memory interface with all Pythons in the range 1.5.2"
" to 2.3.  (Michael Hudson checked in ``Misc/pymemcompat.h``.)"
msgstr ""

#: ../pep-0283.txt:90
msgid ""
"Add a new concept, \"pending deprecation\", with associated warning "
"``PendingDeprecationWarning``.  This warning is normally suppressed, but "
"can be enabled by a suitable ``-W`` option.  Only a few things use this "
"at this time."
msgstr ""

#: ../pep-0283.txt:95
msgid ""
"Warn when an extension type's ``tp_compare`` returns anything except -1, "
"0 or 1.  https://bugs.python.org/issue472523"
msgstr ""

#: ../pep-0283.txt:98
msgid "Warn for assignment to ``None`` (in various forms)."
msgstr ""

#: ../pep-0283.txt:100
msgid ":pep:`218` Adding a Built-In Set Object Type, Wilson"
msgstr ""

#: ../pep-0283.txt:102
msgid ""
"Alex Martelli contributed a new version of Greg Wilson's prototype, and "
"I've reworked that quite a bit.  It's in the standard library now as the "
"module ``sets``, although some details may still change until the first "
"beta release.  (There are no plans to make this a built-in type, for "
"now.)"
msgstr ""

#: ../pep-0283.txt:108
msgid ":pep:`293` Codec error handling callbacks, DÃ¶rwald"
msgstr ""

#: ../pep-0283.txt:110
msgid ""
"Fully implemented.  Error handling in ``unicode.encode`` or "
"``str.decode`` can now be customized."
msgstr ""

#: ../pep-0283.txt:113
msgid ":pep:`282` A Logging System, Mick"
msgstr ""

#: ../pep-0283.txt:115
msgid ""
"Vinay Sajip's implementation has been packagized and imported. "
"(Documentation and unit tests still pending.) "
"https://bugs.python.org/issue578494"
msgstr ""

#: ../pep-0283.txt:119
msgid ""
"A modified MRO (Method Resolution Order) algorithm.  Consensus is that we"
" should adopt C3.  Samuele Pedroni has contributed a draft implementation"
" in C, see https://bugs.python.org/issue619475 This has now been checked "
"in."
msgstr ""

#: ../pep-0283.txt:124
msgid ""
"A new command line option parser.  Greg Ward's Optik package "
"(http://optik.sf.net) has been adopted, converted to a single module "
"named ``optparse``.  See also http://www.python.org/sigs/getopt-sig/"
msgstr ""

#: ../pep-0283.txt:129
msgid ""
"A standard ``datetime`` type.  This started as a wiki: "
"http://www.zope.org/Members/fdrake/DateTimeWiki/FrontPage.  A prototype "
"was coded in ``nondist/sandbox/datetime/``.  Tim Peters has finished the "
"C implementation and checked it in."
msgstr ""

#: ../pep-0283.txt:134
msgid ":pep:`273` Import Modules from Zip Archives, Ahlstrom"
msgstr ""

#: ../pep-0283.txt:136
msgid "Implemented as a part of the :pep:`302` implementation work."
msgstr ""

#: ../pep-0283.txt:138
msgid ":pep:`302` New Import Hooks, JvR"
msgstr ""

#: ../pep-0283.txt:140
msgid ""
"Implemented (though the 2.3a1 release contained some bugs that have been "
"fixed post-release)."
msgstr ""

#: ../pep-0283.txt:143
msgid "A new pickling protocol. See :pep:`307`."
msgstr ""

#: ../pep-0283.txt:145
msgid ""
":pep:`305` (CSV File API, by Skip Montanaro et al.) is in; this is the "
"csv module."
msgstr ""

#: ../pep-0283.txt:148
msgid "Raymond Hettinger's ``itertools`` module is in."
msgstr ""

#: ../pep-0283.txt:150
msgid ""
":pep:`311` (Simplified GIL Acquisition for Extensions, by Mark Hammond) "
"has been included in beta 1."
msgstr ""

#: ../pep-0283.txt:153
msgid ""
"Two new ``PyArg_Parse*()`` format codes, 'k' returns an unsigned C long "
"int that receives the lower ``LONG_BIT`` bits of the Python argument, "
"truncating without range checking. 'K' returns an unsigned C long long "
"int that receives the lower ``LONG_LONG_BIT`` bits, truncating without "
"range checking.  (SF 595026; Thomas Heller did this work.)"
msgstr ""

#: ../pep-0283.txt:160
msgid ""
"A new version of IDLE was imported from the IDLEfork project "
"(http://idlefork.sf.net).  The code now lives in the ``idlelib`` package "
"in the standard library and the ``idle`` script is installed by "
"``setup.py``."
msgstr ""

#: ../pep-0283.txt:167
msgid "Planned features for 2.3"
msgstr ""

#: ../pep-0283.txt:169
msgid "Too late for anything more to get done here."
msgstr ""

#: ../pep-0283.txt:173
msgid "Ongoing tasks"
msgstr ""

#: ../pep-0283.txt:175
msgid ""
"The following are ongoing TO-DO items which we should attempt to work on "
"without hoping for completion by any particular date."
msgstr ""

#: ../pep-0283.txt:178
msgid "Documentation: complete the distribution and installation manuals."
msgstr ""

#: ../pep-0283.txt:181
msgid "Documentation: complete the documentation for new-style classes."
msgstr ""

#: ../pep-0283.txt:184
msgid ""
"Look over the ``Demos/`` directory and update where required (Andrew "
"Kuchling has done a lot of this)"
msgstr ""

#: ../pep-0283.txt:187
msgid "New tests."
msgstr ""

#: ../pep-0283.txt:189
msgid "Fix doc bugs on SF."
msgstr ""

#: ../pep-0283.txt:191
msgid "Remove use of deprecated features in the core."
msgstr ""

#: ../pep-0283.txt:193
msgid "Document deprecated features appropriately."
msgstr ""

#: ../pep-0283.txt:195
msgid "Mark deprecated C APIs with ``Py_DEPRECATED``."
msgstr ""

#: ../pep-0283.txt:197
msgid ""
"Deprecate modules which are unmaintained, or perhaps make a new category "
"for modules 'Unmaintained'"
msgstr ""

#: ../pep-0283.txt:200
msgid "In general, lots of cleanup so it is easier to move forward."
msgstr ""

#: ../pep-0283.txt:204
msgid "Open issues"
msgstr ""

#: ../pep-0283.txt:206
msgid ""
"There are some issues that may need more work and/or thought before the "
"final release (and preferably before the first beta release):  No issues "
"remaining."
msgstr ""

#: ../pep-0283.txt:212
msgid "Features that did not make it into Python 2.3"
msgstr ""

#: ../pep-0283.txt:214
msgid "The import lock could use some redesign.  (SF 683658.)"
msgstr ""

#: ../pep-0283.txt:216
msgid "Set API issues; is the sets module perfect?"
msgstr ""

#: ../pep-0283.txt:218
msgid ""
"I expect it's good enough to stop polishing it until we've had more "
"widespread user experience."
msgstr ""

#: ../pep-0283.txt:221
msgid ""
"A nicer API to open text files, replacing the ugly (in some people's "
"eyes) \"U\" mode flag.  There's a proposal out there to have a new built-"
"in type ``textfile(filename, mode, encoding)``. (Shouldn't it have a "
"*bufsize* argument too?)"
msgstr ""

#: ../pep-0283.txt:226
msgid "Ditto."
msgstr ""

#: ../pep-0283.txt:228
msgid "New widgets for Tkinter???"
msgstr ""

#: ../pep-0283.txt:230
msgid ""
"Has anyone gotten the time for this?  *Are* there any new widgets in Tk "
"8.4?  Note that we've got better Tix support already (though not on "
"Windows yet)."
msgstr ""

#: ../pep-0283.txt:234
msgid "Fredrik Lundh's basetime proposal:"
msgstr ""

#: ../pep-0283.txt:236
msgid "http://effbot.org/ideas/time-type.htm"
msgstr ""

#: ../pep-0283.txt:238
msgid "I believe this is dead now."
msgstr ""

#: ../pep-0283.txt:240
msgid ""
":pep:`304` (Controlling Generation of Bytecode Files by Montanaro) seems "
"to have lost steam."
msgstr ""

#: ../pep-0283.txt:243
msgid ""
"For a class defined inside another class, the ``__name__`` should be "
"``\"outer.inner\"``, and pickling should work.  (SF 633930.  I'm no "
"longer certain this is easy or even right.)"
msgstr ""

#: ../pep-0283.txt:247
msgid ""
"reST is going to be used a lot in Zope3.  Maybe it could become a "
"standard library module?  (Since reST's author thinks it's too unstable, "
"I'm inclined not to do this.)"
msgstr ""

#: ../pep-0283.txt:251
msgid ""
"Decide on a clearer deprecation policy (especially for modules) and act "
"on it.  For a start, see this message from Neal Norwitz: "
"https://mail.python.org/pipermail/python-dev/2002-April/023165.html There"
" seems insufficient interest in moving this further in an organized "
"fashion, and it's not particularly important."
msgstr ""

#: ../pep-0283.txt:257
msgid "Provide alternatives for common uses of the ``types`` module;"
msgstr ""

#: ../pep-0283.txt:259
msgid ""
"Skip Montanaro has posted a proto-PEP for this idea: "
"https://mail.python.org/pipermail/python-dev/2002-May/024346.html"
msgstr ""

#: ../pep-0283.txt:262
msgid "There hasn't been any progress on this, AFAICT."
msgstr ""

#: ../pep-0283.txt:264
msgid ""
"Use pending deprecation for the ``types`` and ``string`` modules.  This "
"requires providing alternatives for the parts that aren't covered yet "
"(e.g. ``string.whitespace`` and ``types.TracebackType``). It seems we "
"can't get consensus on this."
msgstr ""

#: ../pep-0283.txt:269
msgid "Deprecate the ``buffer`` object."
msgstr ""

#: ../pep-0283.txt:271
msgid "https://mail.python.org/pipermail/python-dev/2002-July/026388.html"
msgstr ""

#: ../pep-0283.txt:272
msgid "https://mail.python.org/pipermail/python-dev/2002-July/026408.html"
msgstr ""

#: ../pep-0283.txt:274
msgid "It seems that this is never going to be resolved."
msgstr ""

#: ../pep-0283.txt:276
msgid ":pep:`269` Pgen Module for Python, Riehl"
msgstr ""

#: ../pep-0283.txt:278
msgid ""
"(Some necessary changes are in; the ``pgen`` module itself needs to "
"mature more.)"
msgstr ""

#: ../pep-0283.txt:281
msgid ""
"Add support for the long-awaited Python catalog.  Kapil Thangavelu has a "
"Zope-based implementation that he demoed at OSCON 2002.  Now all we need "
"is a place to host it and a person to champion it.  (Some changes to "
"distutils to support this are in, at least.)"
msgstr ""

#: ../pep-0283.txt:287
msgid ":pep:`266` Optimizing Global Variable/Attribute Access, Montanaro"
msgstr ""

#: ../pep-0283.txt:289
msgid ":pep:`267` Optimized Access to Module Namespaces, Hylton"
msgstr ""

#: ../pep-0283.txt:291
msgid ":pep:`280` Optimizing access to globals, van Rossum"
msgstr ""

#: ../pep-0283.txt:293
msgid ""
"These are basically three friendly competing proposals.  Jeremy has made "
"a little progress with a new compiler, but it's going slow and the "
"compiler is only the first step.  Maybe we'll be able to refactor the "
"compiler in this release.  I'm tempted to say we won't hold our breath.  "
"In the meantime, Oren Tirosh has a much simpler idea that may give a "
"serious boost to the performance of accessing globals and built-ins, by "
"optimizing and inlining the dict access: "
"http://tothink.com/python/fastnames/"
msgstr ""

#: ../pep-0283.txt:302
msgid "Lazily tracking tuples?"
msgstr ""

#: ../pep-0283.txt:304
msgid "https://mail.python.org/pipermail/python-dev/2002-May/023926.html"
msgstr ""

#: ../pep-0283.txt:305
msgid "https://bugs.python.org/issue558745"
msgstr ""

#: ../pep-0283.txt:307
msgid "Not much enthusiasm I believe."
msgstr ""

#: ../pep-0283.txt:309
msgid ":pep:`286` Enhanced Argument Tuples, von Loewis"
msgstr ""

#: ../pep-0283.txt:311
msgid ""
"I haven't had the time to review this thoroughly.  It seems a deep "
"optimization hack (also makes better correctness guarantees though)."
msgstr ""

#: ../pep-0283.txt:315
msgid ""
"Make 'as' a keyword.  It has been a pseudo-keyword long enough. Too much "
"effort to bother."
msgstr ""

#: ../pep-0283.txt:320
msgid "Copyright"
msgstr ""

#: ../pep-0283.txt:322
msgid "This document has been placed in the public domain."
msgstr ""

